{"version":3,"sources":["webpack:///webpack/bootstrap 1c86395c584f84f4ebad","webpack:///./src/main.ts","webpack:///./src/config/di-config.ts","webpack:///external \"reflect-metadata\"","webpack:///external \"inversify\"","webpack:///./src/config/app-constants.ts","webpack:///./src/entities/index.ts","webpack:///./src/entities/app.ts","webpack:///./src/entities/http-server.ts","webpack:///external \"restify\"","webpack:///external \"inversify-restify-utils\"","webpack:///external \"node-uuid\"","webpack:///./src/entities/logger-factory.ts","webpack:///external \"bunyan\"","webpack:///./src/entities/user-service.ts","webpack:///external \"bcrypt\"","webpack:///external \"validator.ts/Validator\"","webpack:///external \"validator.ts/decorator/Validation\"","webpack:///external \"bluebird\"","webpack:///./src/db/index.ts","webpack:///external \"pg-promise\"","webpack:///./src/db/repos/users.ts","webpack:///./src/db/sql/index.ts","webpack:///external \"path\"","webpack:///./src/controllers/index.ts","webpack:///external \"restify-errors\"","webpack:///external \"fs\"","webpack:///./src/controllers/users.ts","webpack:///./src/validate/index.ts","webpack:///./src/validate/validators.ts"],"names":[],"mappings":"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","file":"/Users/36781/dev/vielheit-ts-server/dist/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1c86395c584f84f4ebad\n **/","import kernel from './config/di-config'\nimport IApp from './interfaces/app'\nimport __ from './config/app-constants'\n\n\nconst title =\n    `\n    ___       ___       ___       ___   \n   /\\\\__\\\\     /\\\\  \\\\     /\\\\  \\\\     /\\\\__\\\\  \n  /:/ _/_   _\\\\:\\\\  \\\\   /::\\\\  \\\\   /:/  /  \n |::L/\\\\__\\\\ /\\\\/::\\\\__\\\\ /::\\\\:\\\\__\\\\ /:/__/   \n |::::/  / \\\\::/\\\\/__/ \\\\:\\\\:\\\\/  / \\\\:\\\\  \\\\   \n  L;;/__/   \\\\:\\\\__\\\\    \\\\:\\\\/  /   \\\\:\\\\__\\\\  \n             \\\\/__/     \\\\/__/     \\\\/__/  \n    ___       ___       ___       ___   \n   /\\\\__\\\\     /\\\\  \\\\     /\\\\  \\\\     /\\\\  \\\\  \n  /:/__/_   /::\\\\  \\\\   _\\\\:\\\\  \\\\    \\\\:\\\\  \\\\ \n /::\\\\/\\\\__\\\\ /::\\\\:\\\\__\\\\ /\\\\/::\\\\__\\\\   /::\\\\__\\\\\n \\\\/\\\\::/  / \\\\:\\\\:\\\\/  / \\\\::/\\\\/__/  /:/\\\\/__/\n   /:/  /   \\\\:\\\\/  /   \\\\:\\\\__\\\\    \\\\/__/   \n   \\\\/__/     \\\\/__/     \\\\/__/            \n________________________________________                                                       \n`;\n\nconsole.log(title);\nconst app = kernel.get<IApp>(__.App);\n\nprocess.on('uncaughtException', (...args: Array<any>) => { app.logger.fatal(...args); process.exit(1) });\nprocess.on('unhandledRejection', (...args: Array<any>) =>{ app.logger.fatal(...args); process.exit(1) });\n\napp.bootstrap();\n\nexport default function graceful_shutdown() {\n    app.close()\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.ts\n **/","import 'reflect-metadata'\nimport {Kernel} from 'inversify'\nimport __ from './app-constants'\nimport {IApp, IHTTPServer, IUserService, IDatabaseProvider } from '../interfaces'\nimport {App, HTTPServer, LoggerFactory, UserService } from '../entities'\nimport DatabaseProvider from '../db'\nimport {IDatabase} from 'pg-promise'\nimport {TYPE} from 'inversify-restify-utils';\nimport IController from '../interfaces/controller'\nimport HomeController from '../controllers/index'\nimport UsersController from '../controllers/users'\n\nconst kernel = new Kernel();\n\n// ENTITIES\n\n// App -\n// Our base class to run the application\nkernel\n    .bind<IApp>(__.App)\n    .to(App);\n\n// DatabaseProvider -\n// Deals with initialization logic for database\nkernel\n    .bind<IDatabaseProvider>(__.DatabaseProvider)\n    .to(DatabaseProvider)\n    .inSingletonScope();\n\n// Database\n// In our case, an instnace of a postgres client\nkernel\n    .bind<IDatabase>(__.Database)\n    .toConstantValue(kernel.get<IDatabaseProvider>(__.DatabaseProvider).getDatabase());\n\n\n// HTTPServer -\n// A generic server exposing GET, POST, PUT, and DEL\nkernel\n    .bind<IHTTPServer>(__.HTTPServer)\n    .to(HTTPServer);\n\n// LoggerFactory -\n// Static class providing loggers\nkernel\n    .bind<LoggerFactory>(__.LoggerFactory)\n    .toConstantValue(LoggerFactory);\n\n// SERVICES\n\n// UserService -\nkernel\n    .bind<IUserService>(__.UserService)\n    .to(UserService)\n    .inSingletonScope();\n\n// ROUTES\n\n// Home -\n// Serves core assets and application, index.html, etc.\nkernel\n    .bind<IController>(TYPE.Controller)\n    .to(HomeController)\n    .whenTargetNamed('HomeController');\n\n// Users -\n// TODO: API description\nkernel.bind<IController>(TYPE.Controller)\n    .to(UsersController)\n    .whenTargetNamed('UsersController');\n\nexport default kernel\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/di-config.ts\n **/","module.exports = require(\"reflect-metadata\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"reflect-metadata\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"inversify\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"inversify\"\n ** module id = 3\n ** module chunks = 0\n **/","const __ = {\n    App: Symbol('App'),\n\n    DatabaseProvider: Symbol('DatabaseProvider'),\n    Database: Symbol('Database'),\n    \n    Logger: Symbol('Logger'),\n    LoggerFactory: Symbol('LoggerFactory'),\n\n    HTTPServer: Symbol('HTTPServer'),\n    Router: Symbol('Router'),\n    \n    UserService: Symbol('UserService'),\n};\n\nexport const API_BASE = '/api/';\n\n export default __\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/app-constants.ts\n **/","import App from './app'\nimport HTTPServer from './http-server'\nimport LoggerFactory from './logger-factory'\nimport UserService from './user-service'\n\nexport {\n    App,\n    HTTPServer,\n    LoggerFactory,\n    UserService,\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/entities/index.ts\n **/","import {inject, injectable} from 'inversify'\nimport {IApp, IHTTPServer, ILoggerFactory, ILogger} from '../interfaces'\nimport __ from '../config/app-constants'\nimport {Logger} from \"bunyan\";\n\n\n@injectable()\nclass App implements IApp {\n    @inject(__.HTTPServer) httpServer: IHTTPServer;\n    @inject(__.UserService) userService;\n\n    public logger: ILogger;\n\n    public constructor(@inject(__.LoggerFactory) LoggerFactory: ILoggerFactory) {\n        this.logger = LoggerFactory.getLogger(this);\n    }\n\n    public async bootstrap(): Promise<Boolean> {\n        this.logger.info('starting services');\n        this.httpServer.onBootstrap(this.userService.onBootstrap.bind(this.userService));\n        this.httpServer.listen();\n        return true\n    }\n\n    public close() {\n        this.httpServer.close(() => {\n        })\n    }\n}\n\nexport default App\n\n\n/** WEBPACK FOOTER **\n ** ./src/entities/app.ts\n **/","import { createServer, Server, RequestHandler, CORS, bodyParser } from 'restify'\nimport { InversifyRestifyServer, TYPE } from 'inversify-restify-utils'\nimport kernel from '../config/di-config'\nimport { inject, injectable } from 'inversify'\nimport { ILogger, ILoggerFactory, IReq, IRes } from '../interfaces'\nimport __ from '../config/app-constants'\nimport IHttpServer from '../interfaces/http-server'\nimport { v4 as uuid } from 'node-uuid'\n\n@injectable()\nclass HTTPServer implements IHttpServer {\n    private server: Server;\n    private port: number;\n    private router: InversifyRestifyServer;\n    @inject(__.LoggerFactory) LoggerFactory: ILoggerFactory;\n    public logger: ILogger;\n\n    public constructor(\n        port: number = 8080,\n        name: string = '',\n        version: string = ''\n    ) {\n        this.port = port;\n        this.router = new InversifyRestifyServer(kernel)\n    }\n\n\n    public get version(): string { return this.server.version }\n    public set version(version) { this.server.version = version }\n\n    public get name(): string { return this.server.name }\n    public set name(name) { this.server.name = name }\n\n    private toBootstrap: Array<() => void> = [];\n    public onBootstrap(fn: (cb: (err: Error, res: any) => void) => void): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.toBootstrap.push(() => {\n                return fn((err, result) => err ? reject(err) : resolve(result))\n            })\n        })\n    }\n\n    public listen(): void {\n        this.logger = this.LoggerFactory.getLogger(this);\n\n        this.toBootstrap.forEach((fn) => {\n            fn()\n        });\n\n        this.server = this.router\n            .setConfig((app) => {\n                app.use((req: IReq, res: IRes, next: Function) => {\n                    req.start = Date.now()\n                    req.uuid = uuid()\n                    this.logger.info(`| ${req.uuid} | method=${req.method} url=${req.url}`)\n                    next()                    \n                })\n                \n                app.use(CORS())\n                app.use(bodyParser())\n            })\n            .build();\n\n\n        this.server.on('after', (req: IReq, res: IRes, route: string, err: Error) => {\n            err && err.name !== 'BadRequestError' && this.logger.error(err);\n            this.logger.info(`| ${req.uuid} | url=${req.url} status=${res.statusCode} time=${Date.now() - req.start }`)\n        });\n\n        this.server.on('uncaughtEception', (req: IReq, res: IRes, route: string, err: Error) => {\n            this.logger.fatal(`route=${route}`, err);\n            process.exit(1)\n        });\n\n        this.server.on('unhandledRejection', (req: IReq, res: IRes, route: string, err: Error) => {\n            this.logger.fatal(`route=${route}`, err);\n            process.exit(1)\n        });\n\n        this.server.on('InternalServer', (req: IReq, res: IRes, err: Error, cb: Function) => {\n            this.logger.error(err);\n            console.log(req.body)\n\n\n            // TODO\n            const page = `\n            <h1>sorry, this is broken right now... try again later?</h1>\n\n            ${true ? `<div style=\"background: #feeeee\">\n                <pre>${err}</pre>\n                <pre>${err.stack}</pre>\n              </div>` : ''}\n            `;\n\n            res.writeHead(500);\n            if (req.method === 'GET') {\n                res.end(page)\n            }\n            cb()\n        });\n\n        this.server.on('BadRequest', (req: any, res: any, err: any, cb: Function) => {\n            if (err.jse_cause) {\n                err.body.message = JSON.stringify({errors: err.jse_cause.errors})\n            }\n            cb()\n        });\n\n        this.server.on('NotFound', (req: any, res: any, err: any, cb: Function) => {\n            req.uuid = uuid()\n            req.start = Date.now()\n            \n            const page = `\n            <h1>404</h1>\n            `;\n\n            res.writeHead(404);\n            res.end(page);\n            cb();\n        });\n\n        this.server.listen(this.port, () => this.logger.info(`${this.name} listening on ${this.port}`))\n    }\n\n    public close(callback: Function): void {\n        this.server.close(callback)\n    }\n}\n\nexport default HTTPServer\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/entities/http-server.ts\n **/","module.exports = require(\"restify\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"restify\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = require(\"inversify-restify-utils\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"inversify-restify-utils\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = require(\"node-uuid\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"node-uuid\"\n ** module id = 10\n ** module chunks = 0\n **/","import { createLogger, Logger, LoggerOptions, stdSerializers as serializers } from 'bunyan'\nimport { injectable } from 'inversify'\nimport { ILogger } from '../interfaces'\n\n@injectable()\nclass LoggerFactory {\n    private static makeDefaultConfig(): LoggerOptions {\n        return { name: '', serializers }\n    }\n    \n    private static makeConfig(name: string, options: LoggerOptions): LoggerOptions {\n       options.name = name;\n       return options\n    }\n\n    private static config: LoggerOptions = LoggerFactory.makeDefaultConfig();\n\n    private static createLogger(name: string): ILogger {\n        if (!LoggerFactory.loggers[name]) {\n            LoggerFactory.loggers[name] = <ILogger> createLogger(LoggerFactory.makeConfig(name, LoggerFactory.config))\n        }\n\n        return LoggerFactory.loggers[name]\n    }\n\n    private static loggers: { [key: string]: ILogger } = {};\n\n    public static getLogger(name: Object): ILogger {\n        return LoggerFactory.createLogger(name.constructor.toString().match(/class ([\\w|_]+)/)[1])\n    }\n}\n\nexport default LoggerFactory\n\n\n/** WEBPACK FOOTER **\n ** ./src/entities/logger-factory.ts\n **/","module.exports = require(\"bunyan\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bunyan\"\n ** module id = 12\n ** module chunks = 0\n **/","import {IDatabase} from 'pg-promise'\nimport {injectable, inject} from 'inversify'\nimport {hash, compare} from 'bcrypt'\nimport {Validator} from 'validator.ts/Validator'\nimport {IsLength, IsEmail, IsNumeric} from 'validator.ts/decorator/Validation'\nimport { promisify } from 'bluebird'\n\nimport { ILoggerFactory, ILogger, IUserService, IUser } from '../interfaces'\nimport __ from '../config/app-constants'\nimport {IExtensions} from '../db'\n\nconst validator = new Validator();\nconst SALT_WORK_FACTOR = 15;\nconst hashAsync = promisify(hash)\nconst compareAsync = promisify(compare)\n\n\n@injectable()\nclass UserService implements IUserService {\n    @inject(__.Database) db: IDatabase<IExtensions>&IExtensions;\n    private logger: ILogger;\n\n    constructor(@inject(__.LoggerFactory) LoggerFactory: ILoggerFactory) {\n        this.logger = LoggerFactory.getLogger(this)\n    }\n    \n    public async onBootstrap() {\n        this.logger.info('create users table');\n        return this.db.users.create()\n    }\n\n    public async findByEmail(email: string) {\n        return this.db.users.findByEmail(email)\n    }\n\n    public async getAll() {\n        return this.db.users.all()\n    }\n\n    public async add(req: IUser): Promise<IUser> {\n        const emailExists = await this.db.users.findByEmail(req.email);\n        if (emailExists) {\n            throw new Error('Email already exists')\n        }\n\n        req.password = await hashAsync(req.password, SALT_WORK_FACTOR)\n\n        const user = await this.db.users.add(req)\n        return user\n    }\n\n    public async updatePassword(userId: number, oldPassword: string, newPassword: string) {\n        const user = await this.db.users.find(userId);\n        const passwordHash = user.password;\n        const candidateHash = await hashAsync(oldPassword, SALT_WORK_FACTOR);\n        const valid = await compareAsync(candidateHash, passwordHash);\n        if (valid) {\n            return this.db.users.updatePassword(newPassword, userId)\n        }\n\n        return Promise.reject(new Error())\n    }\n\n    public async authenticate(candidate: string, passwordHash:string): Promise<boolean> {\n        const candidateHash = await hashAsync(candidate, SALT_WORK_FACTOR);\n        const valid = await compareAsync(candidateHash, passwordHash);\n        this.logger.fatal(valid);\n        return valid\n    }\n\n}\n\nclass ValidateUserReq {\n    @IsNumeric()\n    _id: string\n    set id(id: number) {\n        this._id = id + ''\n    }\n    \n    @IsLength(6, 20)\n    password: string\n}\n\nexport class User {\n    @IsLength(6, 20)\n    username: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsLength(6, 20)\n    password: string;\n\n    @IsLength(3, 20)\n    fname: string;\n\n    @IsLength(3, 20)\n    lname: string;\n}\n\nexport default UserService\n\n\n/** WEBPACK FOOTER **\n ** ./src/entities/user-service.ts\n **/","module.exports = require(\"bcrypt\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bcrypt\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"validator.ts/Validator\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"validator.ts/Validator\"\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = require(\"validator.ts/decorator/Validation\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"validator.ts/decorator/Validation\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = require(\"bluebird\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bluebird\"\n ** module id = 17\n ** module chunks = 0\n **/","import {injectable} from 'inversify'\nimport * as promise from 'bluebird'\nimport * as pgPromise from 'pg-promise'\n\nimport {Repository as UsersRepository} from '../db/repos/users'\n\nexport interface IExtensions {\n    users: UsersRepository,\n}\n\n\nimport IDatabaseProvider from '../interfaces/database-provider'\n\n@injectable()\nclass DatabaseProvider implements IDatabaseProvider {\n    private db: pgPromise.IDatabase<IExtensions>&IExtensions;\n\n    public constructor() {\n        const options = {\n            promiseLib: promise,\n            extend: (obj: any) => {\n                obj.users = new UsersRepository(obj)\n            }\n        };\n\n        const config: pgPromise.IConfig = {\n            host: 'localhost',\n            port: 5432,\n            database: process.env.PG_DATABASE || 'vielheit',\n            user: process.env.PG_USER || 'postgres',\n            password: process.env.PG_PASSWORD || 'postgres'\n        };\n\n        this.db = <IExtensions> pgPromise(options)(config);\n    }\n\n    public getDatabase() {\n        return this.db;\n    }\n}\n\nexport default DatabaseProvider\n\n\n/** WEBPACK FOOTER **\n ** ./src/db/index.ts\n **/","module.exports = require(\"pg-promise\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"pg-promise\"\n ** module id = 19\n ** module chunks = 0\n **/","import {IDatabase, IMain} from 'pg-promise'\nimport sqlProvider from '../sql'\n\nconst sql = sqlProvider.users;\n\nexport class Repository {\n    private db: IDatabase<any>;\n\n    constructor(db: any) {\n        this.db = db;\n    }\n\n    public async create() {\n        return this.db.none(sql.create)\n    }\n\n    public async init() {\n        return this.db.tx('Init-Users', (t: any) => t.map(sql.init, null, (row: any) => row.id))\n    }\n\n    public async drop() {\n        return this.db.none(sql.drop)\n    }\n\n    public async empty() {\n        return this.db.none(sql.empty)\n    }\n\n    public async add(user: Object) {\n        return this.db.one(sql.add, user, (u: any) => u.id)\n    }\n\n    public async remove(id: number) {\n        return this.db.result('DELETE FROM Users WHERE ID = $1', id, (r: any) => r.rowcount)\n    }\n\n    public async find(id: number) {\n        return this.db.oneOrNone('SELECT * FROM Users WHERE id = $1', id)\n    }\n\n    public async findByEmail(email: String) {\n        return this.db.oneOrNone('SELECT * FROM Users WHERE email = $1', email)\n    }\n\n    public async all() {\n        return this.db.any('SELECT * FROM Users')\n    }\n\n    public async total() {\n        return this.db.one('SELECT count(*) FROM Users', [], (a: any) => +a.count)\n    }\n\n    public async updatePassword(password: string, id: number) {\n        return this.db.oneOrNone(sql.updatePassword, [password, id], (u: any) => u.id)\n    }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/db/repos/users.ts\n **/","import {QueryFile} from 'pg-promise'\nimport * as path from 'path'\n\nexport class SQL_Helper {\n    public static readFile(file: string) {\n        const fullPath: string = path.join('../src/db/sql', file);\n\n        const options = {\n            minify: true,\n            params: {\n                schema: 'public'\n            },\n        };\n\n\n        return new QueryFile(fullPath, options)\n    }\n}\n\nexport default {\n    users: {\n        create: SQL_Helper.readFile('users/create.sql'),\n        empty: SQL_Helper.readFile('users/empty.sql'),\n        init: SQL_Helper.readFile('users/init.sql'),\n        drop: SQL_Helper.readFile('users/drop.sql'),\n        add: SQL_Helper.readFile('users/add.sql'),\n        updatePassword: SQL_Helper.readFile('users/update-password'),\n    },\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/db/sql/index.ts\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 22\n ** module chunks = 0\n **/","import http from 'http'\nimport { Next } from 'restify'\nimport { InternalServerError }  from 'restify-errors'\nimport { Get, Controller } from 'inversify-restify-utils';\nimport { injectable, inject } from 'inversify'\nimport * as error from 'restify-errors'\nimport { join } from 'path'\nimport { readFile } from 'fs'\nimport { promisify } from 'bluebird'\n\nimport IController from '../interfaces/controller'\nimport __ from '../config/app-constants'\nimport { ILogger, IReq, IRes, ILoggerFactory } from '../interfaces'\n\nlet rFile = promisify(readFile);\n\n@injectable()\n@Controller('/')\nclass HomeController implements IController {\n    private logger: ILogger;\n\n    constructor(@inject(__.LoggerFactory) LoggerFactory: ILoggerFactory) {\n        this.logger = LoggerFactory.getLogger(this)\n    }\n\n    @Get('/')\n    private async index(req: IReq, res: IRes, next: Next) {\n        try {\n            const index = await rFile(join('.', 'src/index.html'));\n            res.writeHead(200);\n            res.end(index);\n            next()\n        } catch (e) {\n            next (new InternalServerError(e))\n        }\n    }\n\n    @Get('/public/bundle.js')\n    private async bundle(req: IReq, res: IRes, next: Next) {\n        try {\n\n            const bundle = await rFile(join('.', 'dist/bundle.js'));\n            res.writeHead(200);\n            res.end(bundle);\n            next()\n\n        } catch (e) {\n            next(new InternalServerError(e))\n        }\n    }\n}\n\nexport default HomeController\n\n\n/** WEBPACK FOOTER **\n ** ./src/controllers/index.ts\n **/","module.exports = require(\"restify-errors\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"restify-errors\"\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 25\n ** module chunks = 0\n **/","import { Next } from 'restify'\nimport { InternalServerError, BadRequestError } from 'restify-errors'\nimport { Post, Get, Controller } from 'inversify-restify-utils';\nimport { injectable, inject } from 'inversify'\nimport { IDatabase } from 'pg-promise'\n\nimport { IController, ILogger, ILoggerFactory, IUserService, IReq, IRes } from '../interfaces'\nimport { API_BASE } from '../config/app-constants'\nimport __ from '../config/app-constants'\nimport Validate from '../validate'\n\n@injectable()\n@Controller(`${API_BASE}/users`)\nclass UsersController implements IController {\n  @inject(__.UserService) userService: IUserService;\n  @inject(__.Database) db: IDatabase;\n  private logger: ILogger;\n\n  constructor(@inject(__.LoggerFactory) LoggerFactory: ILoggerFactory) {\n    this.logger = LoggerFactory.getLogger(this)\n  }\n\n  @Get('/')\n  private async get(req: IReq, res: IRes, next: Next) {\n    const users = await this.userService.getAll();\n    return users;\n  }\n\n  @Validate\n  @Post('/add')\n  private async create(req: IReq, res: IRes, next: Next) {\n    const user = await this.userService.add(req.body);\n    res.send(200, user);\n    return next()\n  }\n\n  @Validate\n  @Post('/authenticate')\n  private async authenticate(req: IReq, res: IRes, next: Next) {\n    const user = await this.userService.findByEmail(req.body.email)\n    if (!user) {\n      return next(new BadRequestError('User not found'))\n    }\n      \n    const valid = await this.userService.authenticate(req.body.password, user.password);\n    res.send(valid);\n    return next()\n  }\n}\n\nexport default UsersController\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/controllers/users.ts\n **/","import {Validator} from 'validator.ts/Validator'\nimport {InternalServerError, BadRequestError} from 'restify-errors'\nimport IReq from '../interfaces/req'\nimport validators from './validators'\n\n\nexport default function Valdiate(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<Function>) {\n  const validatorName = `${target.constructor.toString().match(/class ([\\w|_]+)/)[1]}_${propertyKey}`;\n  const ValidationClass = Reflect.get(validators, validatorName);\n  \n  const method = descriptor.value\n  \n  descriptor.value = function(...args: Array<any>) {\n    const req = args[0];\n    const next = args[args.length - 1];\n  \n    try {\n      const validationRequest = getValidationRequest(ValidationClass, req);\n      const validator = new Validator()\n      validator.validateOrThrow(validationRequest);\n      method.call(this, ...args)\n    } catch (e) {\n      if (e.name === 'ValidationError') {\n        return next(new BadRequestError(e))\n      }\n\n      next(new InternalServerError(e))\n    }\n  }\n}\n\ninterface Newable {\n  new(): any;\n}\n\nfunction getValidationRequest(Klass: Newable, req: IReq) { \n  const instance = new Klass();\n  for (let key in req.body) {\n    const val = req.body[key]\n    if (val) {\n      Reflect.set(instance, key, String(val)); \n    }\n  }\n\n  return instance\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/validate/index.ts\n **/","import {IsLength, IsEmail, IsInt} from 'validator.ts/decorator/Validation'\nimport {IUser} from '../interfaces'\n\nclass UsersController_authenticate {\n    @IsEmail()\n    email: string = '' // TODO: It sucks to have to initialize these\n\n    @IsLength(6, 20)\n    password: string = ''\n}\n\nclass UsersController_create implements IUser {\n  @IsLength(3, 20)\n  fname: string = ''\n\n  @IsLength(3, 20)\n  lname: string = ''\n\n  @IsLength(6, 20)\n  username: string = ''\n\n  @IsLength(6, 20)\n  password: string = ''\n\n  @IsEmail()\n  email: string = ''\n}\n\n\nconst _validators = {\n  UsersController_authenticate, \n  UsersController_create,\n}\n\nconst validators = new Proxy(_validators, {\n  get(target: any, name: string) {\n    return name in target? \n      target[name] : new Error(`Validator ${name} not found!`);\n  }\n})\n\nexport default validators\n\n\n/** WEBPACK FOOTER **\n ** ./src/validate/validators.ts\n **/"],"sourceRoot":""}